# lisää game_goal taulun

ALTER TABLE game
ADD COLUMN game_goal INT;
ALTER TABLE game
ADD FOREIGN KEY (game_goal) REFERENCES goal(goal_id);


# lisää visited_city

DROP TABLE IF EXISTS visited_city;
SET FOREIGN_KEY_CHECKS = 0;
CREATE TABLE visited_city
(
    id_game INT,
    city VARCHAR(100),
    stamp_achieved INT,
    FOREIGN KEY (id_game) REFERENCES game(id),
    FOREIGN KEY (city) REFERENCES airport(ident)
);
SET FOREIGN_KEY_CHECKS = 1;
desc visited_city;




# aloita uusi peli

INSERT INTO game (money_budget, range_budget, location, screen_name, game_goal, score) VALUES (%s, %s, %s, %s, %s, %s)
INSERT INTO game (money_budget, range_budget, location, screen_name, game_goal, score) VALUES (2000, 2000, "EFHK", "testi", 1, 0);

# laittaa random goalin peliin

UPDATE game SET game_goal = (SELECT goal_id FROM goal ORDER BY RAND() LIMIT 1) WHERE game.id = %s;
UPDATE game SET game_goal = (SELECT goal_id FROM goal ORDER BY RAND() LIMIT 1) WHERE game.id = 9;

# laita arvot random_encountereiden sijainnille per peli
# (tää pitää tehdä useamman kerran, probability kolumni määrittää määrän)

INSERT INTO encounter_location (el_game, el_location, el_encounter, visited) VALUES (%s, %s, %s, %s)
INSERT INTO encounter_location (el_game, el_location, el_encounter, visited) VALUES (9, "EGGW", 3, 0);

# hanki tiedot tietystä lentokentästä

SELECT ident, name, municipality FROM airport WHERE ident = %s;
SELECT ident, name, municipality FROM airport WHERE ident = "EGGW";

# hanki sijaintitiedot tietystä lentokentästä

SELECT ident, latitude_deg, longitude_deg, elevation_ft FROM airport WHERE ident = %s;
SELECT ident, latitude_deg, longitude_deg, elevation_ft FROM airport WHERE ident = "EGGW";


# tarkista onko tietyllä lentokentällä random encounter

SELECT el_encounter FROM encounter_location WHERE el_location = %s AND el_game = %s;
SELECT el_encounter FROM encounter_location WHERE el_location = "EGGW" AND el_game = 9;

# tarkista millä lentokentillä on random encounterit

SELECT el_location FROM encounter_location WHERE el_game = %s;
SELECT el_location FROM encounter_location WHERE el_game = 9;

# update location

UPDATE game SET location = %s WHERE game.id = %s;
UPDATE game SET location = "EGGW" WHERE game.id = 9;

# update range

UPDATE game SET range_budget = range_budget + %s WHERE game.id = %s;
UPDATE game SET range_budget = range_budget + -200 WHERE game.id = 9;

# update money

UPDATE game SET money_budget = money_budget + %s WHERE game.id = %s;
UPDATE game SET money_budget = money_budget + -200 WHERE game.id = 9;




# poistaa kaikki game ja encounter_location taulusta (testejä varten vaan)

DELETE FROM encounter_location WHERE el_game = 233;
DELETE FROM visited_city WHERE id_game = 233;
DELETE FROM game WHERE score = 0;

LIMC
LFPO
EGLL
EGSS
EGGW

ALTER TABLE encounter_location DROP COLUMN visited;

INSERT INTO game (screen_name, money_budget, range_budget, score, location, game_goal) VALUES ("Santtu", 2600, 30, 24000, "LFPO", 1);
INSERT INTO game (screen_name, money_budget, range_budget, score, location, game_goal) VALUES ("Joonas", 5900, 300, 7000, "EGSS", 2);
INSERT INTO game (screen_name, money_budget, range_budget, score, location, game_goal) VALUES ("Sergei", 100, 3300, 7010, "EGGW", 1);
INSERT INTO game (screen_name, money_budget, range_budget, score, location, game_goal) VALUES ("Elina", 0, 3300, 3000, "EGGW", 1);

DELETE FROM airport WHERE ident = "RU-0016";
DELETE FROM airport WHERE ident = "RU-0035";
DELETE FROM airport WHERE ident = "RU-4464";
DELETE FROM airport WHERE ident = "LIMC";
DELETE FROM airport WHERE ident = "LFPO";
DELETE FROM airport WHERE ident = "EGLL";
DELETE FROM airport WHERE ident = "EGSS";
DELETE FROM airport WHERE ident = "EGGW";
DELETE FROM airport WHERE ident = "UUDD";
DELETE FROM airport WHERE ident = "UUWW";
DELETE FROM airport WHERE ident = "UUBW";


SET FOREIGN_KEY_CHECKS = 0;
DELETE FROM game;
DELETE FROM encounter_location;
DELETE FROM visited_city;
SELECT * from encounter_location;
SELECT * from game;
SELECT * FROM visited_city;

SELECT DISTINCT * FROM airport;
SELECT ident FROM airport WHERE (SELECT DISTINCT municipality);

# tekee uuden goalin "capital"

INSERT INTO goal (goal_id, title, description, reference) VALUES (3, "Pääkaupungit", "Kerää pääkaupungit", "is_capital")